//构造函数
function Slider(dom){
	//构造函数所需的参数
	this.wrap = dom;
	this.list = wrap.getElementsByTagName("l1");
	//构造三步骤
	this.init();
	this.renderDOM();
	this.bindDOM();
}

//第一步 -- 初始化
Slider.prototype.init = function(){
	//设定每一页的宽高
	this.scaleW = window.innerWidth;
	this.scaleH = window.innerHeight;
	//设定初始的索引值为0
	this.idx = 0;
};

//第二步 -- 渲染DOM
Slider.prototype.renderDOM = function(){
	var wrap = this.wrap;
	var list = this.list;
	var len = list.length;

	for(var i = 0;i<len;i++){
		var item = list[i];
		item.style.height = window.innerHeight + 'px';
		item.style.width = window.innerWidth + 'px';
		item.style.webkitTransform = 'translate3d(0,'+i*this.scaleH+'px,0)';
		/*console.log('第'+i+'张的图片高度是'+i*this.scaleHeight+'px');
		console.log('第'+i+'张的图片宽度是'+this.scaleWidth+'px');*/
	}

	wrap.style.height = window.innerHeight + 'px';
	wrap.style.width = window.innerWidth + 'px';
};
Slider.prototype.goIndex = function(n){
	var idx = this.idx;
	var wrap = this.wrap;
	var list = wrap.getElementsByTagName("li");
	var len = list.length;
	var cidx;

	//如果传的的2,3数字,可以直接滑动到该索引
	if(typeof n == 'number'){
		cidx = idx;
	}else if(typeof n == 'string'){		//传的是字符串
		cidx = idx + n*1;
	}

	//当索引超出值时
	if(cidx > len - 1){
		cidx = len -1
	}else if(cidx < 0){
		cidx = 0;
	}
	//保留当前值
	this.idx = cidx;

	//改变动画的过渡方式，从无动画到有动画
	list[cidx].style.webkitTransition = '-webkit-transform 0.2s ease-out';
	list[cidx-1] && (list[cidx-1].style.webkitTransition = '-webkit-transform 0.2s ease-out');
	list[cidx+1] && (list[cidx+1].style.webkitTransition = '-webkit-transform 0.2s ease-out');

	//动画后对应的位移
	list[cidx].style.webkitTransform = 'translate3d(0,0,0)';
	list[cidx-1] && (list[cidx-1].style.webkitTransform = 'translate3d(0,-'+this.scaleH+'px,0)');
	list[cidx+1] && (list[cidx+1].style.webkitTransform = 'translate3d(0,'+this.scaleH+'px,0)');
};

//第三步 -- 绑定DOM事件
Slider.prototype.bindDOM = function(){
	var wrap = this.wrap;
	var list = wrap.getElementsByTagName("li");
	var self = this;
	var scaleH = self.scaleH;
	var scaleW = self.scaleW;
	var len = list.length;

	var startHandler = function(evt){
		//记录刚按下的时间
		self.startTime = new Date() *1;

		//记录手指刚按下的坐标
		self.startY = evt.touches[0].pageY;

		//消除偏移量
		self.offsetY = 0;

		//事件对象
		var target = evt.target;
		while (target.nodeName != 'LI' && target.nodeName != 'BODY') {
			// statement
			target = target.parentNode;
		}
		self.target = target;
	};
	//手指移动事件
	var moveHandler = function(evt){
		//阻止默认事件,兼容chrome，android
		evt.preventDefault();

		//计算手指的偏移量
		self.offsetY = evt.targetTouches[0].pageY - self.startY;
		/*console.log(self.offsetY);*/

		var lis = wrap.getElementsByTagName("li");
		//起始索引值
		var i = self.idx - 1;

		//结束索引值
		var m = i + 3;

		//最小改变DOM属性
		for(i; i < m; i++){
			lis[i] && (lis[i].style.webkitTransition = '-webkit-transform 0s ease-out ');
			lis[i] && (lis[i].style.webkitTransform = 'translate3d(0,'+(i-self.idx)*self.scaleH + self.offsetY + 'px,0)');
		}

	};
	//手抬起来的时候
	var endHandler = function(evt){
		evt.preventDefault();

		//边界就翻页
		var boundary = scaleW/6;

		//手指抬起来的时间值
		var endTime = new Date() * 1;

		//当手纸移动时间超过300ms时，按位移滑动
		if(endTime - self.startTime > 300){
			if(self.offsetY > boundary){
				self.goIndex('-1');
			}else if(self.offsetY < 0 && self.offsetY < -boundary){
				self.goIndex('+1');
			}else{
				self.goIndex('0');
			}
		}else{
			//优化
			//快速移动也能翻页
			if(self.offsetY > 50){
				self.goIndex('-1');
			}else if(self.offsetY < -50){
				self.goIndex('+1');
			}else{
				self.goIndex('0');
			}
		}
	};

	//绑定事件
	this.wrap.addEventListener('touchstart', startHandler);
	this.wrap.addEventListener('touchmove', moveHandler);
	this.wrap.addEventListener('touchend', endHandler);
};